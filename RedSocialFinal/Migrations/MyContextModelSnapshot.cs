// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedSocialFinal.Data;

#nullable disable

namespace RedSocialFinal.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RedSocialFinal.Models.Comentario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("idPost")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idPost");

                    b.HasIndex("idUsuario");

                    b.ToTable("Comentarios", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            contenido = "111",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6192),
                            idPost = 1,
                            idUsuario = 1
                        },
                        new
                        {
                            id = 2,
                            contenido = "222",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6193),
                            idPost = 1,
                            idUsuario = 5
                        },
                        new
                        {
                            id = 3,
                            contenido = "333",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6194),
                            idPost = 2,
                            idUsuario = 2
                        },
                        new
                        {
                            id = 4,
                            contenido = "444",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6194),
                            idPost = 3,
                            idUsuario = 3
                        },
                        new
                        {
                            id = 5,
                            contenido = "555",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6195),
                            idPost = 4,
                            idUsuario = 4
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idUsuario");

                    b.ToTable("Posts", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            contenido = "111",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6175),
                            idUsuario = 1
                        },
                        new
                        {
                            id = 2,
                            contenido = "222",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6183),
                            idUsuario = 1
                        },
                        new
                        {
                            id = 3,
                            contenido = "333",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6183),
                            idUsuario = 2
                        },
                        new
                        {
                            id = 4,
                            contenido = "444",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6184),
                            idUsuario = 3
                        },
                        new
                        {
                            id = 5,
                            contenido = "555",
                            fecha = new DateTime(2022, 8, 4, 22, 46, 4, 700, DateTimeKind.Local).AddTicks(6184),
                            idUsuario = 4
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.Reaccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("idPost")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idPost");

                    b.HasIndex("idUsuario");

                    b.ToTable("Reacciones", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            idPost = 1,
                            idUsuario = 1,
                            tipo = 1
                        },
                        new
                        {
                            id = 2,
                            idPost = 1,
                            idUsuario = 5,
                            tipo = 1
                        },
                        new
                        {
                            id = 3,
                            idPost = 2,
                            idUsuario = 2,
                            tipo = 1
                        },
                        new
                        {
                            id = 4,
                            idPost = 3,
                            idUsuario = 3,
                            tipo = 1
                        },
                        new
                        {
                            id = 5,
                            idPost = 4,
                            idUsuario = 4,
                            tipo = 1
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.Tag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("palabra")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.ToTable("Tags", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            palabra = "111"
                        },
                        new
                        {
                            id = 2,
                            palabra = "222"
                        },
                        new
                        {
                            id = 3,
                            palabra = "333"
                        },
                        new
                        {
                            id = 4,
                            palabra = "444"
                        },
                        new
                        {
                            id = 5,
                            palabra = "555"
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.TagPost", b =>
                {
                    b.Property<int>("idTag")
                        .HasColumnType("int");

                    b.Property<int>("idPost")
                        .HasColumnType("int");

                    b.HasKey("idTag", "idPost");

                    b.HasIndex("idPost");

                    b.ToTable("Tag_Post", (string)null);

                    b.HasData(
                        new
                        {
                            idTag = 1,
                            idPost = 1
                        },
                        new
                        {
                            idTag = 2,
                            idPost = 1
                        },
                        new
                        {
                            idTag = 3,
                            idPost = 2
                        },
                        new
                        {
                            idTag = 4,
                            idPost = 3
                        },
                        new
                        {
                            idTag = 5,
                            idPost = 4
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("esAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("intentosFallidos")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            apellido = "111",
                            bloqueado = false,
                            dni = "11111111",
                            esAdmin = true,
                            intentosFallidos = 0,
                            mail = "111@111",
                            nombre = "111",
                            pass = "111"
                        },
                        new
                        {
                            id = 2,
                            apellido = "222",
                            bloqueado = false,
                            dni = "22222222",
                            esAdmin = false,
                            intentosFallidos = 0,
                            mail = "222@222",
                            nombre = "222",
                            pass = "222"
                        },
                        new
                        {
                            id = 3,
                            apellido = "333",
                            bloqueado = false,
                            dni = "33333333",
                            esAdmin = false,
                            intentosFallidos = 0,
                            mail = "333@333",
                            nombre = "333",
                            pass = "333"
                        },
                        new
                        {
                            id = 4,
                            apellido = "444",
                            bloqueado = false,
                            dni = "44444444",
                            esAdmin = false,
                            intentosFallidos = 0,
                            mail = "444@444",
                            nombre = "444",
                            pass = "444"
                        },
                        new
                        {
                            id = 5,
                            apellido = "555",
                            bloqueado = true,
                            dni = "55555555",
                            esAdmin = false,
                            intentosFallidos = 3,
                            mail = "555@555",
                            nombre = "555",
                            pass = "555"
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.UsuarioAmigo", b =>
                {
                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.Property<int>("num_usr2")
                        .HasColumnType("int");

                    b.HasKey("num_usr", "num_usr2");

                    b.HasIndex("num_usr2");

                    b.ToTable("Usuario_Amigo", (string)null);

                    b.HasData(
                        new
                        {
                            num_usr = 1,
                            num_usr2 = 2
                        },
                        new
                        {
                            num_usr = 1,
                            num_usr2 = 3
                        },
                        new
                        {
                            num_usr = 2,
                            num_usr2 = 1
                        },
                        new
                        {
                            num_usr = 2,
                            num_usr2 = 4
                        },
                        new
                        {
                            num_usr = 4,
                            num_usr2 = 2
                        },
                        new
                        {
                            num_usr = 4,
                            num_usr2 = 3
                        },
                        new
                        {
                            num_usr = 4,
                            num_usr2 = 5
                        },
                        new
                        {
                            num_usr = 3,
                            num_usr2 = 4
                        },
                        new
                        {
                            num_usr = 5,
                            num_usr2 = 4
                        });
                });

            modelBuilder.Entity("RedSocialFinal.Models.Comentario", b =>
                {
                    b.HasOne("RedSocialFinal.Models.Post", "post")
                        .WithMany("comentarios")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RedSocialFinal.Models.Usuario", "usuario")
                        .WithMany("misComentarios")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("RedSocialFinal.Models.Post", b =>
                {
                    b.HasOne("RedSocialFinal.Models.Usuario", "usuario")
                        .WithMany("misPost")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("RedSocialFinal.Models.Reaccion", b =>
                {
                    b.HasOne("RedSocialFinal.Models.Post", "post")
                        .WithMany("reacciones")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RedSocialFinal.Models.Usuario", "usuario")
                        .WithMany("misReacciones")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("RedSocialFinal.Models.TagPost", b =>
                {
                    b.HasOne("RedSocialFinal.Models.Post", "post")
                        .WithMany("TagPost")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RedSocialFinal.Models.Tag", "tag")
                        .WithMany("TagPost")
                        .HasForeignKey("idTag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("tag");
                });

            modelBuilder.Entity("RedSocialFinal.Models.UsuarioAmigo", b =>
                {
                    b.HasOne("RedSocialFinal.Models.Usuario", "user")
                        .WithMany("misAmigos")
                        .HasForeignKey("num_usr")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RedSocialFinal.Models.Usuario", "amigo")
                        .WithMany("amigosMios")
                        .HasForeignKey("num_usr2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("amigo");

                    b.Navigation("user");
                });

            modelBuilder.Entity("RedSocialFinal.Models.Post", b =>
                {
                    b.Navigation("TagPost");

                    b.Navigation("comentarios");

                    b.Navigation("reacciones");
                });

            modelBuilder.Entity("RedSocialFinal.Models.Tag", b =>
                {
                    b.Navigation("TagPost");
                });

            modelBuilder.Entity("RedSocialFinal.Models.Usuario", b =>
                {
                    b.Navigation("amigosMios");

                    b.Navigation("misAmigos");

                    b.Navigation("misComentarios");

                    b.Navigation("misPost");

                    b.Navigation("misReacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
